{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","classname","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"6PAIA,SAASA,EAAOC,GACZ,OACI,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACrCF,EAAMG,O,IAMbC,E,kDACF,WAAYJ,GAAO,IAAD,8BACd,cAAMA,IACDK,MAAQ,CACTC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJC,E,wDAONC,GACR,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAC/BC,EAAgBP,IAAYA,EAAQI,IAGrB,OAAfJ,EAAQI,KACRJ,EAAQI,GAAKC,KAAKN,MAAMI,QAAU,IAAM,IACxCE,KAAKG,SAAS,CACVR,QAASA,EACTG,SAAUE,KAAKN,MAAMI,a,mCAKpBC,GAAG,IAAD,OACX,OAAO,kBAACX,EAAD,CAAQI,MAAOQ,KAAKN,MAAMC,QAAQI,GAAIR,QAAS,kBAAM,EAAKa,YAAYL,Q,+BAG7E,IACIM,EADEC,EAASJ,EAAgBF,KAAKN,MAAMC,SAO1C,OAJIU,EADAC,EACS,WAAaA,EAEf,iBAAmBN,KAAKN,MAAMI,QAAU,IAAM,KAGrD,6BACI,yBAAKR,UAAU,UAAUe,GACzB,yBAAKE,UAAU,aACVP,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,IAEvB,yBAAKlB,UAAU,aACVU,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,IAEvB,yBAAKlB,UAAU,aACVU,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,S,GAjDnBC,IAAMC,WAuDpBC,E,uKAEE,OACI,yBAAKrB,UAAU,QACX,yBAAKA,UAAU,cACX,kBAACG,EAAD,Y,GALDgB,IAAMC,WAYzB,SAASR,EAAgBP,GAWrB,IAVA,IAAMiB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAAK,CAAC,IAAD,cACnBa,EAAMb,GADa,GAC9Be,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIrB,EAAQmB,IAAMnB,EAAQmB,KAAOnB,EAAQoB,IAAMpB,EAAQmB,KAAOnB,EAAQqB,GACpE,OAAOrB,EAAQmB,GAGnB,OAAO,KAGXG,IAASC,OACL,kBAACP,EAAD,MACAQ,SAASC,eAAe,W","file":"static/js/main.177bf1d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM, { render } from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props){\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n\r\n    )\r\n}\r\n\r\nclass Board extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            xIsNext: true,\r\n        }\r\n    }\r\n    handleClick(i) {\r\n        const squares = this.state.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]){\r\n            return;\r\n        }\r\n        if (squares[i] === null) {\r\n            squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n            this.setState({\r\n                squares: squares,\r\n                xIsNext: !this.state.xIsNext,\r\n            });\r\n        }\r\n       \r\n    }\r\n    renderSquare(i){\r\n        return <Square value={this.state.squares[i]} onClick={() => this.handleClick(i)}/>\r\n    }\r\n    render(){\r\n        const winner = calculateWinner(this.state.squares);\r\n        let status;\r\n        if (winner){\r\n            status = 'Winner: ' + winner; \r\n        } else {\r\n            status='Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n        return(\r\n            <div>\r\n                <div className=\"status\">{status}</div>\r\n                <div classname=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass Game extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}